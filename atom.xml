<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I am Tang Yao.]]></title>
  <link href="http://tangyao0792.github.com/atom.xml" rel="self"/>
  <link href="http://tangyao0792.github.com/"/>
  <updated>2013-01-20T16:09:13+08:00</updated>
  <id>http://tangyao0792.github.com/</id>
  <author>
    <name><![CDATA[Tang Yao]]></name>
    <email><![CDATA[tangyao0792@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sleep sort]]></title>
    <link href="http://tangyao0792.github.com/blog/2013/01/19/sleep-sort/"/>
    <updated>2013-01-19T17:04:00+08:00</updated>
    <id>http://tangyao0792.github.com/blog/2013/01/19/sleep-sort</id>
    <content type="html"><![CDATA[<p>看到一个搞笑的shell脚本实现的排序算法sleep sort:</p>

<pre><code>#!/bin/bash
function f() {
    sleep "$1"
    echo "$1"
}
while [ -n "$1" ]
do
    f "$1" &amp;
    shift
done
wait
</code></pre>

<p>写了个python版本的sleep sort</p>

<pre><code>import time
import thread


def timer(x):
    time.sleep(x)
    print x

if __name__ == '__main__':
    arr = map(int, raw_input('input:    ').split(' '))
    for x in arr:
        thread.start_new_thread(timer, (x,))
    time.sleep(max(arr)+1)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Something Interesting]]></title>
    <link href="http://tangyao0792.github.com/blog/2013/01/17/something-instersting/"/>
    <updated>2013-01-17T00:03:00+08:00</updated>
    <id>http://tangyao0792.github.com/blog/2013/01/17/something-instersting</id>
    <content type="html"><![CDATA[<h3>I&#8217;m dread lord, not drug lord. 我是恐惧魔王，不是毒品大王</h3>

<p>魔兽中有这么个彩蛋，选一个单位，对着他一通狂点，过一会他就会说一些有意思的话。比如大G会抱怨你为什么一直戳他而不去管理军队，狂点小动物,小动物就会爆炸，狂点恐惧魔王，会听到一个人打电话给恐惧魔王要买毒品。</p>

<p>会不会在我的blog的某个地方狂点，也会有有意思的东西出现? : )</p>

<h3>How long is too long for you?</h3>

<p>一次突发奇想，既然有long long,那么是否有 long long long 呢？试之，发现gcc告诉我:</p>

<pre><code>'long long long' is too long for GCC   
</code></pre>

<p>太多的时间花在无趣的东西上，比如上课上班排队，是件多么浪费生命的事。作为即将趟IT界浑水的人，在时间被代码吞噬之时，多创造有趣的事，让生活有趣，时间可没有 too long for me.</p>

<p>新catagory, something interesting.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[人人发状态脚本]]></title>
    <link href="http://tangyao0792.github.com/blog/2013/01/13/ren-ren-fa-zhuang-tai-jiao-ben/"/>
    <updated>2013-01-13T10:25:00+08:00</updated>
    <id>http://tangyao0792.github.com/blog/2013/01/13/ren-ren-fa-zhuang-tai-jiao-ben</id>
    <content type="html"><![CDATA[<p>一直都对写爬虫挺感兴趣。</p>

<p>几个月之前，写过一个py登3g人人发状态的脚本。不知什么时候3g人人登录需要一个验证码，学术不精，那个脚本就无法维护了。于是目标变成了正常网页版的人人。</p>

<p>登陆很容易就实现了。发状态的功能之前3g版的脚本思路是找到form，把该填的内容自己urlencode,然后post去action的地址;网页版不同的地方是网页版的html源码很复杂，submit还会调js。</p>

<p>尝试一：用python的mechanize库模拟浏览器，返回405失败。
原因应该就是js，简单的提交form的内容，不是合法的数据。</p>

<p>尝试二：抓包分析，看看浏览器究竟发送什么东西。</p>

<p> 发状态的抓包结果摘录如下:</p>

<pre><code>Connection: keep-alive
Pragma: no-cache
Cache-Control: no-cache
content=whereareyou&amp;hostid=466114025&amp;requestToken=250857259&amp;_rtk=dab4c585&amp;channel=renren
HTTP/1.1 200 OK
</code></pre>

<p>content一行就是我们需要完整发送的东西，可以猜测hostid是每个人人用户对应的一个id，requestToken和_rkt就是我们自己post form数据时缺少的内容，所以发送状态没有成功。在网页的html源码里,有个js脚本中正好有我的requestToken和_rtk的值,可以猜测它就是每次浏览器submit添加进的。那么我们只要自己解析登录之后网页的html源码，找到这两个值，发状态时添加进去，状态就成功发送了。</p>

<p>现在回顾一下这次脚本编写的思路：</p>

<p>尝试简单post表单中内容，发现失败，原因是发送的内容缺少一些信息; 那么缺少什么信息呢？抓包看到的，发现有一些隐藏的信息也需要发送过去，加上之后，成功发送。</p>

<p>py代码:<a href="https://github.com/tangyao0792/Spiders/blob/master/RenrenSpiders/publicStatus.py">https://github.com/tangyao0792/Spiders/blob/master/RenrenSpiders/publicStatus.py</a></p>

<p>ps:我写了个死循环发状态，然后打了个电话，回来之后发现已经发了1w+次状态&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start Project Euler]]></title>
    <link href="http://tangyao0792.github.com/blog/2013/01/12/start-project-euler/"/>
    <updated>2013-01-12T23:55:00+08:00</updated>
    <id>http://tangyao0792.github.com/blog/2013/01/12/start-project-euler</id>
    <content type="html"><![CDATA[<p>喜欢思考，才能聪明。</p>

<p>自己的思维方式太过混乱，遇到问题没有一套系统的通用的思考方式，只会乱猜乱碰，也许这就是我和那些聪明的人的差距吧。开始做 <a href="http://www.projecteuler.net">projecteuler.net</a> 上的数学题，遇到一些能够有所思考的题，记录下来。又开始刷题的目的很简单，就是思考。以前刷题的目的是过题，所以会有各种线下打表等奇淫技巧，很少花时间思考一下遇到的问题是什么，我是怎么解决的。</p>

<p>让我对思维感兴趣的是《暗时间》上推荐的一本书，《How to solve it》(G.波利亚)，书里以初中的数学为例，介绍应该如何思考问题的方法。最早的数学是人们思维的游戏，尤其是数论，只是在近代才有了密码学这样的应用.很多人研究数论的问题，完全是沉浸在思维的乐趣之中。而以数学去反思思维，能最大程度屏蔽掉外界的干扰，注意力只放在单纯的数字之上。</p>

<p>博客的第二个catagory就是欧拉计划的题解了，也不能算是题解，因为我已经不是acmer了，而且记下的更多的是思考的过程。代码会放在github上，语言可能是有很多,先以py为主。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://tangyao0792.github.com/blog/2013/01/12/hello-world/"/>
    <updated>2013-01-12T00:25:00+08:00</updated>
    <id>http://tangyao0792.github.com/blog/2013/01/12/hello-world</id>
    <content type="html"><![CDATA[<p>test:</p>

<h1>Hello world</h1>

<h2>Hello world</h2>

<h3>Hello world</h3>

<h4>Hello world</h4>

<h5>Hello world</h5>

<h6>Hello world</h6>

<p>中文测试：</p>

<p><em>哈罗渥德</em>  <br/>
<strong>哈罗渥德</strong>  <br/>
<strong><em>哈罗渥德</em></strong></p>

<p>octopress搭完。看来除了ubuntu中字体比较丑之外没有不满意的地方了，下一步是把首页弄一下，有时间用js做个什么有意思的东西放上去。。</p>

<p><em>这篇helloworld本是7月写完发到github pages，当时只是图好玩研究的jekyll，没有坚持.现在是2013年1月，不管是找工作还是继续读书，需要积累的东西都还有很多，所以重新clone了当时的git，这次是真正开始写博客了。</em></p>
]]></content>
  </entry>
  
</feed>
